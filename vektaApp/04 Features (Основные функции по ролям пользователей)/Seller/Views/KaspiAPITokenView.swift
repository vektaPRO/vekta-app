//
//  KaspiAPITokenView.swift
//  vektaApp
//
//  Created by Almas Kadeshov on 29.06.2025.
//

import SwiftUI

struct KaspiAPITokenView: View {
    
    // üß† –ü–æ–¥–∫–ª—é—á–∞–µ–º ViewModel (–º–æ–∑–≥ —ç–∫—Ä–∞–Ω–∞)
    @StateObject private var viewModel = KaspiTokenViewModel()
    @Environment(\.dismiss) private var dismiss
    
    var body: some View {
        NavigationView {
            ScrollView {
                VStack(spacing: 24) {
                    
                    // üé® –ö—Ä–∞—Å–∏–≤–∞—è —à–∞–ø–∫–∞
                    headerSection
                    
                    // üìù –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ —Ç–æ–∫–µ–Ω–∞
                    tokenInputSection
                    
                    // ‚úÖ –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                    saveButtonSection
                    
                    // üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
                    instructionsSection
                    
                    Spacer()
                }
                .padding(.horizontal, 20)
                .padding(.top, 20)
            }
            .navigationTitle("Kaspi API")
            .navigationBarTitleDisplayMode(.large)
            .toolbar {
                ToolbarItem(placement: .navigationBarTrailing) {
                    Button("–ì–æ—Ç–æ–≤–æ") {
                        dismiss()
                    }
                }
            }
            .alert("–û—à–∏–±–∫–∞", isPresented: .constant(viewModel.errorMessage != nil)) {
                Button("OK") {
                    viewModel.errorMessage = nil
                }
            } message: {
                Text(viewModel.errorMessage ?? "")
            }
        }
    }
}

// MARK: - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
extension KaspiAPITokenView {
    
    // üé® –ö—Ä–∞—Å–∏–≤–∞—è —à–∞–ø–∫–∞ —Å –∏–∫–æ–Ω–∫–æ–π
    private var headerSection: some View {
        VStack(spacing: 16) {
            
            // –ò–∫–æ–Ω–∫–∞ Kaspi
            Image(systemName: "creditcard.circle.fill")
                .font(.system(size: 60))
                .foregroundColor(.orange)
            
            VStack(spacing: 8) {
                Text("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Kaspi")
                    .font(.title2)
                    .fontWeight(.bold)
                
                Text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API —Ç–æ–∫–µ–Ω –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤")
                    .font(.subheadline)
                    .foregroundColor(.secondary)
                    .multilineTextAlignment(.center)
            }
        }
        .padding(.bottom, 20)
    }
    
    // üìù –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Ç–æ–∫–µ–Ω–∞
    private var tokenInputSection: some View {
        VStack(alignment: .leading, spacing: 12) {
            
            HStack {
                Text("API –¢–æ–∫–µ–Ω")
                    .font(.headline)
                
                Spacer()
                
                // –°—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω–∞
                if viewModel.isTokenSaved {
                    HStack(spacing: 4) {
                        Image(systemName: "checkmark.circle.fill")
                            .foregroundColor(.green)
                        Text("–°–æ—Ö—Ä–∞–Ω–µ–Ω")
                            .font(.caption)
                            .foregroundColor(.green)
                    }
                }
            }
            
            // –ü–æ–ª–µ –≤–≤–æ–¥–∞
            TextField("–í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à Kaspi API —Ç–æ–∫–µ–Ω", text: $viewModel.apiToken, axis: .vertical)
                .textFieldStyle(RoundedBorderTextFieldStyle())
                .autocapitalization(.none)
                .autocorrectionDisabled()
                .lineLimit(3...6)
            
            // –°–æ–æ–±—â–µ–Ω–∏—è
            if let successMessage = viewModel.successMessage {
                Text(successMessage)
                    .foregroundColor(.green)
                    .font(.caption)
            }
        }
        .padding(20)
        .background(Color(UIColor.systemGray6))
        .cornerRadius(12)
    }
    
    // ‚úÖ –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    private var saveButtonSection: some View {
        Button(action: {
            viewModel.saveApiToken()
        }) {
            HStack {
                if viewModel.isLoading {
                    ProgressView()
                        .scaleEffect(0.8)
                        .foregroundColor(.white)
                }
                
                Text(viewModel.isTokenSaved ? "–û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω" : "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω")
                    .fontWeight(.semibold)
            }
            .frame(maxWidth: .infinity)
            .padding()
            .background(viewModel.isValidToken() ? Color.blue : Color.gray)
            .foregroundColor(.white)
            .cornerRadius(12)
        }
        .disabled(viewModel.isLoading || !viewModel.isValidToken())
    }
    
    // üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
    private var instructionsSection: some View {
        VStack(alignment: .leading, spacing: 16) {
            
            Text("–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å API —Ç–æ–∫–µ–Ω:")
                .font(.headline)
            
            VStack(alignment: .leading, spacing: 12) {
                InstructionStep(number: "1", text: "–í–æ–π–¥–∏—Ç–µ –≤ –∫–∞–±–∏–Ω–µ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞ Kaspi.kz")
                InstructionStep(number: "2", text: "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª \"–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è\" –∏–ª–∏ \"API\"")
                InstructionStep(number: "3", text: "–°–æ–∑–¥–∞–π—Ç–µ –∏–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à API —Ç–æ–∫–µ–Ω")
                InstructionStep(number: "4", text: "–í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ –ø–æ–ª–µ –≤—ã—à–µ")
            }
        }
        .padding(20)
        .background(Color.blue.opacity(0.05))
        .cornerRadius(12)
    }
}

// üìù –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —à–∞–≥–æ–≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
struct InstructionStep: View {
    let number: String
    let text: String
    
    var body: some View {
        HStack(spacing: 12) {
            // –ù–æ–º–µ—Ä —à–∞–≥–∞
            Text(number)
                .font(.caption)
                .fontWeight(.bold)
                .foregroundColor(.white)
                .frame(width: 24, height: 24)
                .background(Color.blue)
                .clipShape(Circle())
            
            // –¢–µ–∫—Å—Ç —à–∞–≥–∞
            Text(text)
                .font(.subheadline)
                .foregroundColor(.primary)
            
            Spacer()
        }
    }
}

#Preview {
    KaspiAPITokenView()
}
