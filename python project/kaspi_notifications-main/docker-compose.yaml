version: '3.3'
volumes:
  postgres_data:
  static_value:


services:

  db:
    image: postgres:12.4
    environment:
      POSTGRES_DB: kaspi_notifications
      POSTGRES_USER: notification_user
      POSTGRES_PASSWORD: KNdHI02F
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  web:
    build: .
    restart: always
    depends_on:
      - db
      - rabbitmq
    env_file:
      - ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=kaspi_notifications.settings.local
    volumes:
      - static_value:/code/kaspi_notifications/staticfiles/
      - ./logs.txt:/code/logs.txt
      - ./logs:/code/logs
    networks:
      - default
      - shared_api_network

  nginx:
    image: nginx:1.23.1-alpine
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - ./logs.txt:/code/logs.txt
    networks:
      - default
      - shared_api_network
    depends_on:
      - web

  celery_worker:
    build:
      context: .
      dockerfile: ./CeleryWorkerDockerFile
    restart: always
    depends_on:
      - web
      - rabbitmq
    volumes:
      - ./logs.txt:/code/logs.txt
      - ./logs:/code/logs
    env_file:
      - ./.env

  celery_beat:
    build:
      context: .
      dockerfile: CeleryBeatDockerFile
    restart: always
    depends_on:
      - celery_worker
      - rabbitmq
    volumes:
      - ./logs.txt:/code/logs.txt
      - ./logs:/code/logs
    env_file:
      - ./.env


  rabbitmq:
    image: 'bitnami/rabbitmq:latest'
    ports:
      - 5672:5672

  bot:
    build:
      context: .
      dockerfile: BotDispatcherDockerFile
    restart: always
    depends_on:
      - web
    env_file:
      - ./.env
    volumes:
      - ./logs.txt:/code/logs.txt
      - ./logs:/code/logs
    command: bash -c 'export DJANGO_SETTINGS_MODULE="kaspi_notifications.settings.local"; cd kaspi_notifications; python manage.py bot_dispatcher'

networks:
  shared_api_network:
    external: true