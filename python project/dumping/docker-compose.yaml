version: '3.3'
volumes:
  postgres_data:
  static_value:
  output_value:
  redis_data:
  elasticsearch_data:

networks:
  test:
    driver: bridge


services:

  db:
    image: postgres:12.4
    environment:
      POSTGRES_DB: kaspi_parser
      POSTGRES_USER: parser_user
      POSTGRES_PASSWORD: eeaV0v9t
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  web:
#    on server use image from docker hub "image: inarash/xxx"
    build: .
    restart: always
    depends_on:
      - db
      - rabbitmq
      - redis
    env_file:
      - ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=parser_kaspi.settings.local
    volumes:
      - static_value:/code/parser_kaspi/static/
      - output_value:/code/output/
      - ./parser_kaspi:/code/parser_kaspi # This line is not for production
      - /var/log/irocket/:/logs/

  nginx:
    image: nginx:1.23.1-alpine
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - output_value:/var/html/output/
    depends_on:
      - web

  celery_worker:
    #  on server use image from docker hub "image: inarash/xxx"
    build:
      context: .
      dockerfile: ./CeleryWorkerDockerFile
    restart: always
    depends_on:
      - web
      - rabbitmq
    env_file:
      - ./.env
    volumes:
      - ./parser_kaspi/logs.txt:/code/parser_kaspi/logs.txt
      - output_value:/code/output/
      - /var/log/irocket/:/logs/

  celery_beat:
    # on server use image from docker hub "image: inarash/xxx"
    build:
      context: .
      dockerfile: CeleryBeatDockerFile
    restart: always
    depends_on:
      - celery_worker
      - rabbitmq
    env_file:
      - ./.env
    volumes:
      - ./celerybeat-schedule/:/code/celerybeat

  rabbitmq:
    image: 'bitnami/rabbitmq:latest'
    ports:
      - 5672:5672

  redis:
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data


  filebeat:
    image: docker.elastic.co/beats/filebeat:7.16.2
    user: root
    depends_on:
      - elasticsearch
      - kibana
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/log/irocket/:/var/log/irocket/:ro
    command: filebeat -e --strict.perms=false
    networks:
      - test


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"

    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - test
    restart: on-failure
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.2
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - "xpack.security.authc.http.enabled=false"
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - test