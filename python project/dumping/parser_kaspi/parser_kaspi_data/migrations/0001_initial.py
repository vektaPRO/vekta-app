# Generated by Django 4.2.11 on 2024-04-11 09:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='KaspiNotificationClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='ФИО клиента')),
                ('email', models.EmailField(blank=True, max_length=300, null=True, verbose_name='email клиента')),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True, verbose_name='номер телефона')),
            ],
            options={
                'verbose_name': 'Клиент Kaspi',
                'verbose_name_plural': 'Клиенты Kaspi',
            },
        ),
        migrations.CreateModel(
            name='KaspiOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='номер заказа')),
                ('order_date', models.DateTimeField(blank=True, null=True, verbose_name='дата заказа')),
                ('order_type', models.CharField(blank=True, max_length=200, null=True, verbose_name='тип заказа')),
                ('order_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='статус заказа')),
            ],
            options={
                'verbose_name': 'Заказ Kaspi',
                'verbose_name_plural': 'Заказы Kaspi',
            },
        ),
        migrations.CreateModel(
            name='KaspiProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=300, null=True, verbose_name='название')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='ваша цена')),
                ('current_price_place', models.IntegerField(blank=True, null=True, verbose_name='текущее ценовое место')),
                ('first_place_price', models.IntegerField(blank=True, null=True, verbose_name='цена 1 места')),
                ('second_place_price', models.IntegerField(blank=True, null=True, verbose_name='цена 2 места')),
                ('third_place_price', models.IntegerField(blank=True, null=True, verbose_name='цена 3 места')),
                ('target_price_place', models.IntegerField(blank=True, null=True, verbose_name='ценовой ориентир')),
                ('code', models.CharField(blank=True, max_length=150, null=True, verbose_name='код продукта')),
                ('master_sku', models.CharField(blank=True, max_length=150, null=True, verbose_name='SKU продукта')),
                ('available', models.BooleanField(blank=True, null=True, verbose_name='в наличии')),
                ('price_auto_change', models.BooleanField(blank=True, default=False, null=True, verbose_name='авто изм-е цены')),
                ('price_difference', models.IntegerField(blank=True, default=None, null=True, verbose_name='разница в цене')),
                ('date_of_parsing', models.DateTimeField(auto_now_add=True, verbose_name='время парсинга')),
                ('remainders', models.IntegerField(blank=True, null=True, verbose_name='внесен. остаток')),
                ('calculated_remainders', models.IntegerField(blank=True, default=0, null=True, verbose_name='высчитан. остаток')),
                ('remainders_date', models.DateTimeField(blank=True, null=True, verbose_name='время внесения остатков')),
                ('reserved_remainders', models.IntegerField(blank=True, null=True, verbose_name='в резерве')),
                ('sold_remainders', models.IntegerField(blank=True, null=True, verbose_name='продано')),
            ],
            options={
                'verbose_name': 'Продукт Kaspi',
                'verbose_name_plural': 'Продукты Kaspi',
            },
        ),
        migrations.CreateModel(
            name='Merchant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True, verbose_name='название')),
                ('merchant_id', models.CharField(blank=True, max_length=300, null=True, verbose_name='id продавца')),
                ('enable_parsing', models.BooleanField(blank=True, default=False, null=True, verbose_name='авто парсинг')),
                ('login', models.CharField(blank=True, max_length=300, null=True, verbose_name='логин')),
                ('password', models.CharField(blank=True, max_length=300, null=True, verbose_name='пароль')),
                ('price_auto_change', models.BooleanField(blank=True, default=False, null=True, verbose_name='авто изм-е цены')),
                ('price_difference', models.IntegerField(blank=True, default=None, null=True, verbose_name='разница в цене')),
                ('price_place', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3')], default='1', max_length=1, null=True, verbose_name='ценовой ориентир')),
                ('allowed_number_of_products_with_price_change', models.IntegerField(blank=True, default=None, null=True, verbose_name='установл.кол-во товаров с измен-ем цены')),
                ('allowed_number_of_products_with_remainders', models.IntegerField(blank=True, default=None, null=True, verbose_name='установл.кол-во товаров с остатками')),
            ],
            options={
                'verbose_name': 'Продавец Kaspi',
                'verbose_name_plural': 'Продавцы Kaspi',
            },
        ),
        migrations.CreateModel(
            name='ProductPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_changing', models.DateTimeField(auto_now_add=True, verbose_name='время изменения')),
                ('changed_price', models.IntegerField(blank=True, null=True, verbose_name='измененная цена')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='parser_kaspi_data.kaspiproduct', verbose_name='продукт')),
            ],
            options={
                'verbose_name': 'Цена продуктов',
                'verbose_name_plural': 'Цены продуктов',
            },
        ),
        migrations.AddField(
            model_name='kaspiproduct',
            name='merchant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kaspi_products', to='parser_kaspi_data.merchant', verbose_name='продавец'),
        ),
        migrations.CreateModel(
            name='KaspiOrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True, verbose_name='количество')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='parser_kaspi_data.kaspiorder', verbose_name='заказ')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='parser_kaspi_data.kaspiproduct', verbose_name='продукт')),
            ],
            options={
                'verbose_name': 'Продукт из заказа Kaspi',
                'verbose_name_plural': 'Продукты из заказа Kaspi',
            },
        ),
    ]
